#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/migrate.py upgrade  - –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    python scripts/migrate.py revision "–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"  - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
    python scripts/migrate.py downgrade  - –æ—Ç–∫–∞—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–≥—Ä–∞—Ü–∏—é
    python scripts/migrate.py current  - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –ë–î
    python scripts/migrate.py history  - –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –º–∏–≥—Ä–∞—Ü–∏–π
"""

import sys
import os
import subprocess
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

def run_alembic_command(command: list):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É alembic —Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        venv_path = project_root / "venv"
        
        if venv_path.exists():
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ Python –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
            if os.name == 'nt':  # Windows
                python_path = venv_path / "Scripts" / "python.exe"
                alembic_path = venv_path / "Scripts" / "alembic.exe"
            else:  # Unix/Linux/macOS
                python_path = venv_path / "bin" / "python"
                alembic_path = venv_path / "bin" / "alembic"
            
            # –ï—Å–ª–∏ alembic –¥–æ—Å—Ç—É–ø–µ–Ω –≤ venv, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
            if alembic_path.exists():
                command[0] = str(alembic_path)
            else:
                # –ò–Ω–∞—á–µ –∑–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ python -m alembic
                command = [str(python_path), "-m"] + command
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        result = subprocess.run(
            command,
            cwd=project_root,
            capture_output=False
        )
        
        return result.returncode
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        return 1

def main():
    if len(sys.argv) < 2:
        print(__doc__)
        sys.exit(1)
    
    action = sys.argv[1].lower()
    
    if action == "upgrade":
        print("üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...")
        exit_code = run_alembic_command(["alembic", "upgrade", "head"])
        if exit_code == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π")
        sys.exit(exit_code)
    
    elif action == "revision":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏")
            print("–ü—Ä–∏–º–µ—Ä: python scripts/migrate.py revision '–î–æ–±–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤'")
            sys.exit(1)
        
        message = sys.argv[2]
        print(f"üìù –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é: {message}")
        exit_code = run_alembic_command(["alembic", "revision", "--autogenerate", "-m", message])
        if exit_code == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏")
        sys.exit(exit_code)
    
    elif action == "downgrade":
        print("‚¨áÔ∏è –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–≥—Ä–∞—Ü–∏—é...")
        exit_code = run_alembic_command(["alembic", "downgrade", "-1"])
        if exit_code == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–∫–∞—á–µ–Ω–∞!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–∞—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏")
        sys.exit(exit_code)
    
    elif action == "current":
        print("üìç –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        run_alembic_command(["alembic", "current"])
    
    elif action == "history":
        print("üìö –ò—Å—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π:")
        run_alembic_command(["alembic", "history"])
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {action}")
        print(__doc__)
        sys.exit(1)

if __name__ == "__main__":
    main() 